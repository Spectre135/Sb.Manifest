"use strict";var app=angular.module("SbManifest");app.factory("httpRequestInterceptor",[function(){return{request:function(config){return config.headers.Authorization="HitAuthToken "+sessionStorage.getItem("Authorization"),config}}}]),app.config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push("httpRequestInterceptor")}]),app.factory("apiService",(function($q,$http){var service={};function writeError(response){if(window.localStorage.removeItem("error"),window.localStorage.removeItem("status"),null!==response)try{window.localStorage.setItem("error",response.Message+" "+response.ExceptionMessage),window.localStorage.setItem("status",response.status)}catch(err){}else window.localStorage.setItem("error","Failed to load resource: the server responded with a status of 404 (Not Found)")}return service.getData=function(apiUrl,params,posivim){var deferred=$q.defer();return posivim&&(window.onload=grayOut(!0)),$http({method:"GET",url:apiUrl,params:params}).then((function onSuccess(response){deferred.resolve(response.data)})).catch((function onError(response){writeError(response.data),deferred.reject(response)})).finally((function(){posivim&&(window.onload=grayOut(!1))})),deferred.promise},service.postData=function(apiUrl,dto,posivim){var deferred=$q.defer();return posivim&&(window.onload=grayOut(!0)),$http({method:"POST",url:apiUrl,data:dto}).then((function onSuccess(response){deferred.resolve(response.data)})).catch((function onError(response){writeError(response.data),deferred.reject(response)})).finally((function(){posivim&&(window.onload=grayOut(!1))})),deferred.promise},service.deleteData=function(apiUrl,params){var deferred=$q.defer();return window.onload=grayOut(!0),$http({method:"DELETE",url:apiUrl,params:params}).then((function onSuccess(response){deferred.resolve(response.data)})).catch((function onError(response){writeError(response.data),deferred.reject(response)})).finally((function(){posivim&&(window.onload=grayOut(!1))})),deferred.promise},service}));